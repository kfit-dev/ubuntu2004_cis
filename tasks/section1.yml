---
- name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install cramfs(\\s|$)"
      line: "install cramfs /bin/true"
      state: present
      owner: root
      group: root
      mode: 0644
      create: true
  when:
      - ubuntu2004cis_rule_1_1_1_1
  tags:
      - level1
      - patch
      - cramfs
      - filesystems
      - rule_1.1.1.1

- name: "1.1.1.1 | PATCH | Remove cramfs module"
  modprobe:
      name: cramfs
      state: absent
  when:
      - ubuntu2004cis_rule_1_1_1_1
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - cramfs
      - filesystems
      - rule_1.1.1.1

- name: "1.1.1.2 | PATCH | Ensure mounting of freevxfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install freevxfs"
      line: "install freevxfs /bin/true"
      state: present
      create: true
  when:
      - ubuntu2004cis_rule_1_1_1_2
  tags:
      - level1
      - patch
      - freevxfs
      - filesystems
      - rule_1.1.1.2

- name: "1.1.1.2 | PATCH | Remove freevxfs module"
  modprobe:
      name: freevxfs
      state: absent
  when:
      - ubuntu2004cis_rule_1_1_1_2
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - freevxfs
      - filesystems
      - rule_1.1.1.2

- name: "1.1.1.3 | PATCH | Ensure mounting of jffs2 filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install jffs2(\\s|$)"
      line: "install jffs2 /bin/true"
      state: present
      create: true
  when:
      - ubuntu2004cis_rule_1_1_1_3
  tags:
      - level1
      - patch
      - jffs2
      - filesystems
      - rule_1.1.1.3

- name: "1.1.1.3 | PATCH | Remove jffs2 module"
  modprobe:
      name: jffs2
      state: absent
  when:
      - ubuntu2004cis_rule_1_1_1_3
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - jffs2
      - filesystems
      - rule_1.1.1.3

- name: "1.1.1.4 | PATCH | Ensure mounting of hfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfs(\\s|$)"
      line: "install hfs /bin/true"
      state: present
      create: true
  when:
      - ubuntu2004cis_rule_1_1_1_4
  tags:
      - level1
      - patch
      - hfs
      - filesystems
      - rule_1.1.1.4

- name: "1.1.1.4 | PATCH | Remove hfs module"
  modprobe:
      name: hfs
      state: absent
  when:
      - ubuntu2004cis_rule_1_1_1_4
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - hfs
      - filesystems
      - rule_1.1.1.4

- name: "1.1.1.5 | PATCH | Ensure mounting of hfsplus filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfsplus(\\s|$)"
      line: "install hfsplus /bin/true"
      state: present
      create: true
  when:
      - ubuntu2004cis_rule_1_1_1_5
  tags:
      - level1
      - patch
      - hfsplus
      - filesystems
      - rule_1.1.1.5

- name: "1.1.1.5 | PATCH | Remove hfsplus module"
  modprobe:
      name: hfsplus
      state: absent
  when:
      - ubuntu2004cis_rule_1_1_1_5
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - hfsplus
      - filesystems
      - rule_1.1.1.5

- name: "1.1.1.6 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu2004cis_rule_1_1_1_6
  tags:
      - level2
      - notscored
      - patch
      - squashfs
      - filesystems
      - rule_1.1.1.6
      - notimplemented

- name: "1.1.1.7 | PATCH | Ensure mounting of udf filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install udf(\\s|$)"
      line: "install udf /bin/true"
      state: present
      create: true
  when:
      - ubuntu2004cis_rule_1_1_1_7
  tags:
      - level1
      - patch
      - udf
      - filesystems
      - rule_1.1.1.7

- name: "1.1.1.7 | PATCH | Remove udf module"
  modprobe:
      name: udf
      state: absent
  when:
      - ubuntu2004cis_rule_1_1_1_7
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - udf
      - filesystems
      - rule_1.1.1.7

- name: "1.1.2.1 | PATCH | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
  copy:
      src: "{{ tmp_mount_file[ansible_os_family] }}"
      dest: /etc/systemd/system/tmp.mount
      owner: root
      group: root
      mode: 0644
      force: true
      remote_src: true
  notify:
      - systemd restart tmp.mount
  when:
      - ubuntu2004cis_rule_1_1_2_1
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - rule_1.1.2.1

- name: "1.1.2.1 | PATCH | Ensure separate partition exists for /tmp | enable and start/restart tmp.mount"
  systemd:
      name: tmp.mount
      daemon_reload: yes
      enabled: yes
      masked: no
      state: started
  when:
      - ubuntu2004cis_rule_1_1_2_1
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - patch
      - rule_1.1.2.1

- name: "1.1.2.2 | PATCH | Ensure nodev option set on /tmp partition\n
        1.1.2.3 | PATCH | Ensure noexec option set on /tmp partition\n
        1.1.2.4 | PATCH | Ensure nosuid option set on /tmp partition\n
        | drop custom tmp.mount"
  ini_file:
      path: "{{ item }}"
      section: Mount
      option: Options
      value: "{{ tmp_mount_options[ansible_os_family] }}"
      no_extra_spaces: true
  with_items:
      - "{{ tmp_mount_file[ansible_os_family] }}"
      - /etc/systemd/system/tmp.mount
  notify:
      - systemd restart tmp.mount
  when:
      - ubuntu2004cis_rule_1_1_2_2
      - ubuntu2004cis_rule_1_1_2_3
      - ubuntu2004cis_rule_1_1_2_4
  tags:
      - level1
      - scoredtem
      - patch
      - rule_1.1.2.2
      - rule_1.1.2.3
      - rule_1.1.2.4

- name: "1.1.3.1 | PATCH | Ensure separate partition exists for /var"
  shell: mount | grep "on /var "
  register: var_mounted
  changed_when: false
  failed_when: false
  args:
      warn: false
  when:
      - ubuntu2004cis_rule_1_1_3_1
  tags:
      - level2
      - patch
      - rule_1.1.3.1
      - skip_ansible_lint

- name: "1.1.3.2 | PATCH | Ensure nodev option set on /var partition\n
        1.1.3.3 | PATCH | Ensure nosuid option set on /var partition"
  mount:
      name: /var
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "defaults, rw, nosuid, nodev, noexec, realtime 0 0"
  when:
      - ubuntu2004cis_rule_1_1_3_2
      - ubuntu2004cis_rule_1_1_3_3
      - item.mount == "/var"
  with_items:
      - "{{ ansible_mounts }}"
  tags:
      - level1
      - patch
      - rule_1.1.3.2
      - rule_1.1.3.3

- name: "1.1.4.1 | PATCH | Ensure separate partition exists for /var/tmp"
  shell: mount | grep "on /var/tmp "
  register: var_tmp_mounted
  changed_when: false
  failed_when: false
  args:
      warn: false
  when:
      - ubuntu2004cis_rule_1_1_4_1
  tags:
      - level2
      - patch
      - rule_1.1.4.1
      - skip_ansible_lint

- name: "1.1.4.2 | PATCH | Ensure nodev option set on /var/tmp partition\n
        1.1.4.3 | PATCH | Ensure nosuid option set on /var/tmp partition\n
        1.1.4.4| PATCH | Ensure noexec option set on /var/tmp partition"
  mount:
      name: /var/tmp
      src: "{{ ubuntu2004cis_vartmp['source'] }}"
      state: mounted
      fstype: "{{ ubuntu2004cis_vartmp['fstype'] }}"
      opts: "{{ ubuntu2004cis_vartmp['opts'] }}"
  when:
      - ubuntu2004cis_vartmp['enabled'] == 'yes'
      - ubuntu2004cis_rule_1_1_4_2
      - ubuntu2004cis_rule_1_1_4_3
      - ubuntu2004cis_rule_1_1_4_4
  tags:
      - level1
      - patch
      - rule_1.1.4.2
      - rule_1.1.4.3
      - rule_1.1.4.4

- name: "1.1.5.1 | PATCH | Ensure separate partition exists for /var/log"
  shell: mount | grep "on /var/log "
  register: var_log_mounted
  changed_when: false
  failed_when: false
  args:
      warn: false
  when:
      - ubuntu2004cis_rule_1_1_5_1
  tags:
      - level2
      - patch
      - rule_1.1.5.1
      - skip_ansible_lint

- name: "1.1.5.2 | PATCH | Ensure nodev option set on /var/log partition\n
        1.1.5.3 | PATCH | Ensure nosuid option set on /var/log partition\n
        1.1.5.4| PATCH | Ensure noexec option set on /var/log partition"
  mount:
      name: /var/log
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "defaults, rw, nosuid, nodev, noexec, realtime 0 0"
  when:
      - ubuntu2004cis_rule_1_1_5_2
      - ubuntu2004cis_rule_1_1_5_3
      - ubuntu2004cis_rule_1_1_5_4
      - item.mount == "/var/log"
  with_items:
      - "{{ ansible_mounts }}"
  tags:
      - level1
      - patch
      - rule_1.1.5.2
      - rule_1.1.5.3
      - rule_1.1.5.4

- name: "1.1.6.1 | PATCH | Ensure separate partition exists for /var/log/audit"
  shell: mount | grep "on /var/log/audit "
  register: var_log_audit_mounted
  changed_when: false
  failed_when: false
  args:
      warn: false
  when:
      - ubuntu2004cis_rule_1_1_6_1
  tags:
      - level2
      - patch
      - rule_1.1.6.1
      - skip_ansible_lint

- name: "1.1.6.2 | PATCH | Ensure nodev option set on /var/log/audit partition\n
        1.1.6.3 | PATCH | Ensure nosuid option set on /var/log/audit partition\n
        1.1.6.4| PATCH | Ensure noexec option set on /var/log/audit partition"
  mount:
      name: /var/log/audit
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "defaults, rw, nosuid, nodev, noexec, realtime 0 0"
  when:
      - ubuntu2004cis_rule_1_1_6_2
      - ubuntu2004cis_rule_1_1_6_3
      - ubuntu2004cis_rule_1_1_6_4
      - item.mount == "/var/log/audit"
  with_items:
      - "{{ ansible_mounts }}"
  tags:
      - level1
      - patch
      - rule_1.1.6.2
      - rule_1.1.6.3
      - rule_1.1.6.4

- name: "1.1.7.1 | PATCH | Ensure separate partition exists for /home"
  shell: mount | grep "on /home "
  register: home_mounted
  changed_when: false
  failed_when: false
  args:
      warn: false
  when:
      - ubuntu2004cis_rule_1_1_7_1
  tags:
      - level2
      - patch
      - rule_1.1.7.1
      - skip_ansible_lint

- name: "1.1.7.2 | PATCH | Ensure nodev option set on /home partition"
  mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nodev"
  when:
      - ubuntu2004cis_rule_1_1_7_2
      - item.mount == "/home"
  with_items:
      - "{{ ansible_mounts }}"
  tags:
      - level1
      - patch
      - rule_1.1.7.2

- name: "1.1.7.3 | PATCH | Ensure nosuid option set on /home partition"
  mount:
      name: "/home"
      src: "{{ item.device }}"
      state: mounted
      fstype: "{{ item.fstype }}"
      opts: "nosuid"
  when:
      - ubuntu2004cis_rule_1_1_7_3
      - item.mount == "/home"
  with_items:
      - "{{ ansible_mounts }}"
  tags:
      - level1
      - patch
      - rule_1.1.7.3

- name: "1.1.8.1 | PATCH | Ensure nodev option set on /dev/shm partition\n
        1.1.8.2 | PATCH | Ensure noexec option set on /dev/shm partition\n
        1.1.8.3 | PATCH | Ensure nosuid option set on /dev/shm partition"
  mount:
      name: /dev/shm
      src: tmpfs
      state: mounted
      fstype: tmpfs
      opts: "defaults,rw,nosuid,nodev,noexec,relatime 0 0"
  when:
      - ubuntu2004cis_rule_1_1_8_1
      - ubuntu2004cis_rule_1_1_8_2
      - ubuntu2004cis_rule_1_1_8_3
  tags:
      - level1
      - patch
      - rule_1.1.8.1
      - rule_1.1.8.2
      - rule_1.1.8.3

- name: "1.1.9 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: false
  when:
      - not ubuntu2004cis_allow_autofs
      - autofs_service_status.stdout == "loaded"
      - ubuntu2004cis_rule_1_1_9
  tags:
      - level1
      - patch
      - rule_1.1.9

- name: "1.1.10 | PATCH | Disable USB Storage"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install usb-storage(\\s|$)"
      line: "install usb-storage /bin/true"
      state: present
      create: true
  when:
      - ubuntu2004cis_rule_1_1_10
  tags:
      - level1
      - patch
      - udf
      - filesystems
      - rule_1.1.10

- name: "1.2.1 | PATCH | Ensure AIDE is installed (install nullmailer instead of postfix)"
  apt:
      name:
          - nullmailer
      state: present
      install_recommends: false
  when:
      - ubuntu2004cis_rule_1_2_1
      - not postfix_installed.rc == 0
  tags:
      - level1
      - aide
      - patch
      - rule_1.2.1

- name: "1.2.1 | PATCH | Ensure AIDE is installed"
  apt:
      name:
          - aide
          - aide-common
      state: present
      install_recommends: false
  when:
      - ubuntu2004cis_rule_1_2_1
  tags:
      - level1
      - aide
      - patch
      - rule_1.2.1

- name: "1.2.1 | PATCH | Stat AIDE DB"
  stat: path=/var/lib/aide/aide.db
  register: aide_db
  tags:
      - level1
      - aide
      - patch
      - rule_1.2.1

- name: "1.2.1 | PATCH | Init AIDE | This may take a LONG time"
  command: /usr/sbin/aideinit
  args:
      creates: /var/lib/aide/aide.db
  when:
      - ubuntu2004cis_config_aide
      - ubuntu2004cis_rule_1_2_1
      - not aide_db.stat.exists
      - not ubuntu2004cis_skip_for_travis
  tags:
      - level1
      - aide
      - patch
      - rule_1.2.1

- name: "1.2.1 | PATCH | Stat AIDE daily cron"
  stat: path=/etc/cron.daily/aide
  register: aide_daily_cron
  tags:
    - level1
    - aide
    - file_integrity
    - patch
    - rule_1.2.1

- name: "1.2.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check weekly
      cron_file: "{{ ubuntu2004cis_aide_cron['cron_file'] }}"
      user: "{{ ubuntu2004cis_aide_cron['cron_user'] }}"
      minute: "{{ ubuntu2004cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ ubuntu2004cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ ubuntu2004cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ ubuntu2004cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ ubuntu2004cis_aide_cron['aide_weekday'] | default('0') }}"
      job: "{{ ubuntu2004cis_aide_cron['aide_job'] }}"
  when:
      - ubuntu2004cis_rule_1_2_2
      - not aide_daily_cron.stat.exists
  tags:
      - level1
      - aide
      - file_integrity
      - patch
      - rule_1.2.2

- name: "1.3.1 | PATCH | Ensure updates, patches, and additional security software are installed"
  apt:
      upgrade: dist
  when:
      - ubuntu2004cis_apply_upgrades
  tags:
      - level1
      - notscored
      - patch
      - rule_1.3.1
      - skip_ansible_lint

- name: "1.3.2 | PATCH | Ensure package manager repositories are configured"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu2004cis_rule_1_3_2
  tags:
      - level1
      - notscored
      - patch
      - rule_1.3.2
      - notimplemented

- name: "1.3.3 | PATCH | Ensure GPG keys are configured"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu2004cis_rule_1_3_3
  tags:
      - level1
      - notscored
      - patch
      - rule_1.3.3
      - notimplemented

- name: "1.4.1 | PATCH | Ensure bootloader password is set - generate password"
  shell: "set -o pipefail;
        if [ '{{ ubuntu2004cis_bootloader_password }}' == 'random' ];
        then PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c12); else PASSWORD='{{ ubuntu2004cis_bootloader_password }}';
        fi;
        echo -e \"$PASSWORD\n$PASSWORD\" | grub-mkpasswd-pbkdf2 | awk '/grub.pbkdf/{print$NF}'"
  register: grub_pass
  args:
      executable: /bin/bash
  when:
      - ubuntu2004cis_set_boot_pass
      - ubuntu2004cis_rule_1_4_1
  tags:
      - level1
      - grub
      - patch
      - rule_1.4.1

- name: "1.4.1 | PATCH | Ensure bootloader password is set - generate config"
  copy:
      dest: /etc/grub.d/00_password
      content: "cat << EOF\nset superusers=\"root\"\npassword_pbkdf2 root {{ grub_pass.stdout }}\nEOF"
      owner: root
      group: root
      mode: 0755
  notify: generate new grub config
  when:
      - ubuntu2004cis_set_boot_pass and grub_pass is defined and grub_pass.stdout is defined and grub_pass.stdout | length >0
      - ubuntu2004cis_rule_1_4_1
  tags:
      - level1
      - grub
      - patch
      - rule_1.4.1

- name: "1.4.1 | PATCH | Ensure bootloader password is set - disable password for system boot"
  replace:
      path: /etc/grub.d/10_linux
      regexp: '--class os"'
      replace: '--class os --unrestricted"'
  notify: generate new grub config
  when:
      - ubuntu2004cis_set_boot_pass
      - ubuntu2004cis_rule_1_4_1
      - ubuntu2004cis_rule_1_4_1_disable_password
  tags:
      - level1
      - grub
      - patch
      - rule_1.4.1

- name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured for grub.cfg"
  file:
      path: "/boot/grub/grub.cfg"
      owner: root
      group: root
      mode: 0400
  when:
      - ansible_os_family == "Debian"
      - ubuntu2004cis_rule_1_4_2
  tags:
      - level1
      - grub
      - patch
      - rule_1.4.2

- name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured for grub.conf"
  file:
      path: "/boot/grub/grub.conf"
      owner: root
      group: root
      mode: 0400
  when:
      - ansible_os_family == "Debian"
      - ubuntu2004cis_rule_1_4_2
      - grub_conf.stat.exists
  tags:
      - level1
      - grub
      - patch
      - rule_1.4.2

- name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured for menu.lst"
  file:
      path: "/boot/grub/menu.lst"
      owner: root
      group: root
      mode: 0400
  when:
      - ansible_os_family == "Debian"
      - ubuntu2004cis_rule_1_4_2
      - menu_lst.stat.exists
  tags:
      - level1
      - grub
      - patch
      - rule_1.4.2

- name: "1.4.3 | PATCH | Ensure authentication required for single user mode"
  shell: "set -o pipefail;
          if [ '{{ ubuntu2004cis_root_password }}' == 'random' ];
          then PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c24); else PASSWORD='{{ ubuntu2004cis_root_password }}';
          fi;
          echo \"root:$PASSWORD\" | chpasswd"
  args:
      executable: /bin/bash
  when:
      - ubuntu2004cis_rule_1_4_3
      - current_root_password.stdout | length > 0
  tags:
      - level1
      - patch
      - rule_1.4.3

- name: "1.5.1 | PATCH | Ensure prelink is not installed"
  command: prelink -ua
  when:
      - prelink_installed.rc == 0
      - ubuntu2004cis_rule_1_5_1
  tags:
      - level1
      - patch
      - rule_1.5.1

- name: "1.5.1 | PATCH | Ensure prelink is not installed"
  apt:
      name: prelink
      state: absent
  when:
      - ubuntu2004cis_rule_1_5_1
  tags:
      - level1
      - patch
      - rule_1.5.1

- name: "1.5.2 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: "2"
      state: present
      reload: true
      sysctl_set: true
      ignoreerrors: true
  when:
      - ubuntu2004cis_rule_1_5_2
  tags:
      - level1
      - patch
      - sysctl
      - rule_1.5.2

- name: "1.5.3 | PATCH | Ensure ptrace_scope is restricted"
  sysctl:
      name: kernel.yama.ptrace_scope
      value: "1"
      state: present
      reload: true
      sysctl_set: true
      ignoreerrors: true
  when:
      - ubuntu2004cis_rule_1_5_3
  tags:
      - level1
      - patch
      - sysctl
      - rule_1.5.3

- name: "1.5.4 | PATCH | Ensure prelink is not installed"
  apt:
      name: apport
      state: absent
  when:
      - ubuntu2004cis_rule_1_5_4
  tags:
      - level1
      - patch
      - rule_1.5.4

- name: "1.5.5 | PATCH | Ensure core dumps are restricted"
  sysctl:
      name: fs.suid_dumpable
      value: "0"
      state: present
      reload: true
      sysctl_set: true
      ignoreerrors: true
  when:
      - ubuntu2004cis_rule_1_5_5
  tags:
      - level1
      - sysctl
      - patch
      - rule_1.5.5

- name: "1.5.5 | PATCH | Ensure systemd-coredump is installed"
  apt:
      name: systemd-coredump
      state: present
  notify: restart systemd-coredump
  when:
      - ubuntu2004cis_rule_1_5_5
  tags:
      - level1
      - patch
      - rule_1.5.5

- name: "1.5.5 | PATCH | Ensure hard core 0 is set"
  lineinfile:
      dest: /etc/security/limits.conf
      line: '*                hard    core            0'
      regexp: '(^#)?\*\s+hard\s+core\s+[0-9]+'
      state: present
      create: true
      insertbefore: "# End of file"
  notify: restart systemd-coredump
  when:
      - ubuntu2004cis_rule_1_5_5
  tags:
      - level1
      - patch
      - rule_1.5.5

- name: "1.6.1.1 | PATCH | Ensure AppArmor is installed"
  apt:
      name:
          - apparmor
          - apparmor-utils
      state: present
  when:
      - ubuntu2004cis_rule_1_6_1_1
  tags:
      - level1
      - patch
      - rule_1.6.1.1

- name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration"
  block:
      - name: "1.6.1.2 | PATCH | Ensure AppArmor is enabled in the bootloader configuration"
        replace:
            dest: /etc/default/grub
            regexp: '^(GRUB_CMDLINE_LINUX=(?!.*apparmor)\"[^\"]*)(\".*)'
            replace: '\1 apparmor=1 security=apparmor\2'
        notify:
            - generate new grub config

      - name: "1.6.1.2 | PATCH | Ensure AppArmor Security is enabled in the bootloader configuration"
        replace:
            dest: /etc/default/grub
            regexp: '^(GRUB_CMDLINE_LINUX=(?!.*security)\"[^\"]*)(\".*)'
            replace: '\1 security=apparmor\2'
        notify:
            - generate new grub config
  when:
      - ubuntu2004cis_rule_1_6_1_2
  tags:
      - level1
      - patch
      - rule_1.6.1.2

- name: "1.6.1.3 | PATCH | Ensure all AppArmor Profiles are in enforce or complain mode"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu2004cis_rule_1_6_1_3
  tags:
      - level1
      - patch
      - rule_1.6.1.3
      - notimplemented

- name: "1.6.1.4 | PATCH | Ensure all AppArmor Profiles are enforcing"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu2004cis_rule_1_6_1_4
  tags:
      - level1
      - patch
      - rule_1.6.1.4
      - notimplemented

- name: "1.7.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
  when:
      - ubuntu2004cis_rule_1_7_1
  tags:
      - level1
      - patch
      - banner
      - rule_1.7.1

- name: "1.7.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
  when:
      - ubuntu2004cis_rule_1_7_2
  tags:
      - level1
      - patch
      - banner
      - rule_1.7.2

- name: "1.7.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
  when:
      - ubuntu2004cis_rule_1_7_3
  tags:
      - level1
      - patch
      - banner
      - rule_1.7.3

- name: "1.7.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      dest: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - ubuntu2004cis_rule_1_7_4
  tags:
      - level1
      - patch
      - perms
      - rule_1.7.4

- name: "1.7.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      dest: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - ubuntu2004cis_rule_1_7_5
  tags:
      - level1
      - patch
      - perms
      - rule_1.7.5

- name: "1.7.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      dest: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - ubuntu2004cis_rule_1_7_6
  tags:
      - level1
      - patch
      - perms
      - rule_1.7.6

- name: "1.8.1 | PATCH | Ensure GNOME Display Manager is removed"
  apt:
      name: gdm3
      state: absent
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_1
  tags:
      - level2
      - patch
      - banner
      - rule_1.8.1

- name: "1.8.2 | PATCH | Ensure GDM login banner is configured"
  lineinfile:
      dest: "{{ item.file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
      create: true
      owner: root
      group: root
      mode: 0644
  with_items:
      - { file: '/etc/dconf/profile/gdm', regexp: 'user-db', line: 'user-db:user' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'system-db', line: 'system-db:gdm' }
      - { file: '/etc/dconf/profile/gdm', regexp: 'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: 'banner-message-enable', line: 'banner-message-enable=true' }
      - { file: '/etc/dconf/db/gdm.d/01-banner-message', regexp: 'banner-message-text', line: "banner-message-text='{{ ubuntu2004cis_warning_banner }}' " }
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_2
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.2

- name: "1.8.3 | PATCH | Ensure disable-user-list is enabled"
  lineinfile:
      path: /etc/gdm3/greeter.dconf-default
      regexp: '^disable-user-list='
      line: 'disable-user-list=true'
      insertafter: 'banner-message-text='
      create: true
      owner: root
      group: root
      mode: 0644
  notify: reload dconf
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_3
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.3

- name: "1.8.4 | PATCH | Ensure GDM screen locks when the user is idle"
  block:
      - name: "1.8.4 | PATCH | Ensure GDM screen locks when the user is idle | session profile"
        lineinfile:
            path: /etc/dconf/profile/session
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.after | default(omit) }}"
            loop:
                - "{ regexp: 'user-db: user', line: 'user' }"
                - "{ regexp: 'system-db: system-db:gdm', after: '^user-db.*' }"

      - name: "1.8.4 | PATCH | Ensure GDM screen locks when the user is idle | make directory"
        file:
            path: "/etc/dconf/db/gdm.d"
            owner: root
            group: root
            mode: 0755
            state: directory
        notify: reload dconf

      - name: "1.8.4 | PATCH | Ensure GDM screen locks when the user is idle | session script"
        template:
            src: etc/dconf/db/00-screensaver.j2
            dest: "/etc/dconf/db/gdm.d/00-screensaver"
            owner: root
            group: root
            mode: '0644'
        notify: reload dconf
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_4
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.4

- name: "1.8.5 | PATCH | Ensure GDM screen locks cannot be overridden"
  block:
      - name: "1.8.5 | PATCH | Ensure GDM screen locks cannot be overridden | make lock directory"
        file:
            path: "/etc/dconf/db/gdm.d/locks"
            owner: root
            group: root
            mode: 0755
            state: directory
        notify: reload dconf

      - name: "1.8.5 | PATCH | Ensure GDM screen locks cannot be overridden | make lockfile"
        template:
            src: etc/dconf/db/00-screensaver_lock.j2
            dest: "/etc/dconf/db/gdm.d/locks/00-screensaver"
            owner: root
            group: root
            mode: 0644
        notify: reload dconf
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_5
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.5

- name: "1.8.6 | PATCH | Ensure GDM automatic mounting of removable media is disabled"
  block:
      - name: "1.8.6 | PATCH | Ensure GDM automatic mounting of removable media is disabled | make directory"
        file:
            path: "/etc/dconf/db/gdm.d"
            owner: root
            group: root
            mode: 0755
            state: directory
        notify: reload dconf

      - name: "1.8.6 | PATCH | Ensure GDM automatic mounting of removable media is disabled | session script"
        template:
            src: etc/dconf/db/00-media-automount.j2
            dest: "/etc/dconf/db/gdm.d/00-media-automount"
            owner: root
            group: root
            mode: '0644'
        notify: reload dconf
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_6
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.6

- name: "1.8.7 | PATCH | Ensure GDM disabling automatic mounting of removable media is not overridden"
  block:
      - name: "1.8.7 | PATCH | Ensure GDM disabling automatic mounting of removable media is not overridden | make lock directory"
        file:
            path: "/etc/dconf/db/gdm.d/locks"
            owner: root
            group: root
            mode: 0755
            state: directory
        notify: reload dconf

      - name: "1.8.7 | PATCH | Ensure GDM disabling automatic mounting of removable media is not overridden | make lockfile"
        template:
            src: etc/dconf/db/00-automount_lock.j2
            dest: "/etc/dconf/db/gdm.d/locks/00-automount_lock"
            owner: root
            group: root
            mode: 0644
        notify: reload dconf
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_7
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.7

- name: "1.8.8 | PATCH | Ensure GDM autorun-never is enabled"
  block:
      - name: "1.8.8 | PATCH | Ensure GDM autorun-never is enabled | make directory"
        file:
            path: "/etc/dconf/db/gdm.d"
            owner: root
            group: root
            mode: 0755
            state: directory
        notify: reload dconf

      - name: "1.8.8 | PATCH | Ensure GDM autorun-never is enabled | session script"
        template:
            src: etc/dconf/db/00-media-autorun.j2
            dest: "/etc/dconf/db/gdm.d/00-media-autorun"
            owner: root
            group: root
            mode: '0644'
        notify: reload dconf
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_8
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.8

- name: "1.8.9 | PATCH | Ensure GDM autorun-never is not overridden"
  block:
      - name: "1.8.9 | PATCH | Ensure GDM autorun-never is not overridden | make lock directory"
        file:
            path: "/etc/dconf/db/gdm.d/locks"
            owner: root
            group: root
            mode: 0755
            state: directory
        notify: reload dconf

      - name: "1.8.9 | PATCH | Ensure GDM autorun-never is not overridden | make lockfile"
        template:
            src: etc/dconf/db/00-autorun_lock.j2
            dest: "/etc/dconf/db/gdm.d/locks/00-autorun_lock"
            owner: root
            group: root
            mode: 0644
        notify: reload dconf
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_9
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.9

- name: "1.8.10 | PATCH | Ensure XDCMP is not enabled"
  lineinfile:
      path: /etc/gdm3/custom.conf
      regexp: '^Enable.*=.*true'
      state: absent
  when:
      - ubuntu2004cis_gui
      - ubuntu2004cis_rule_1_8_10
  tags:
      - level1
      - patch
      - banner
      - rule_1.8.10
