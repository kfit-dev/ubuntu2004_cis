- name: "2.1.1.1 | PATCH | Ensure a single time synchronization daemon is in use"
  block:
      - name: "2.1.1.1 | PATCH | Ensure a single time synchronization daemon is in use | Pkg installed"
        apt:
            name: "{{ ubuntu2004cis_time_synchronization }}"
            state: present

      - name: "2.1.1.1 | PATCH | Ensure a single time synchronization daemon is in use | other pkgs removed"
        apt:
            name: "{{ item }}"
            state: absent
        loop:
            - chrony
            - ntp
        when: item != ubuntu2004cis_time_synchronization

      - name: "2.1.1.1 | PATCH | Ensure a single time synchronization daemon is in use | mask service"
        service:
            name: systemd-timesyncd.service
            state: stopped
            enabled: false
            masked: true
        when:
            - ubuntu2004cis_time_synchronization != "systemd-timesyncd"
            - "'systemd-timesyncd' in ansible_facts.packages"
  when:
      - ubuntu2004cis_rule_2_1_1_1
  tags:
      - level1
      - ntp
      - chrony
      - patch
      - rule_2.1.1.1
      - skip_ansible_lint

- name: "2.1.2.1 | PATCH | Ensure chrony is configured with authorized timeserver"
  block:
      - name: "2.1.2.1 | PATCH | Ensure chrony is configured with authorized timeserver | create chrony.conf"
        template:
            src: chrony.conf.j2
            dest: "{{ chrony_config_file[ansible_os_family] }}"
            owner: root
            group: root
            mode: 0644
      - name: "2.1.2.1 | PATCH | Ensure chrony is configured | modify /etc/sysconfig/chronyd"
        lineinfile:
            dest: /etc/sysconfig/chronyd
            regexp: "^(#)?OPTIONS"
            line: "OPTIONS=\"-u {{ chrony_system_user[ansible_os_family] }}\""
            state: present
            create: true
  when:
      - ubuntu2004cis_rule_2_1_2_1
      - ubuntu2004cis_time_synchronization == "chrony"
  tags:
      - level1
      - chrony
      - patch
      - rule_2.1.2.1
      - skip_ansible_lint

- name: "2.1.2.2 | PATCH | Ensure chrony is running as user _chrony"
  lineinfile:
      path: /etc/chrony/chrony.conf
      regexp: '^user _chrony'
      line: 'user _chrony'
  when:
      - ubuntu2004cis_rule_2_1_2_2
      - ubuntu2004cis_time_synchronization == "chrony"
  tags:
      - level1
      - chrony
      - patch
      - rule_2.1.2.2
      - skip_ansible_lint

- name: "2.1.2.3 | PATCH | Ensure chrony is enabled and running"
  systemd:
      name: chrony
      state: started
      enabled: true
  when:
      - ubuntu2004cis_time_synchronization == "chrony"
      - ubuntu2004cis_rule_2_1_2_3
  tags:
      - level1
      - chrony
      - patch
      - rule_2.1.2.3
      - skip_ansible_lint

- name: "2.1.3.1 | PATCH | Ensure systemd-timesyncd configured with authorized timeserver"
  block:
      - name: "2.1.3.1 | PATCH | Ensure systemd-timesyncd configured with authorized timeserver | conf directory"
        file:
            path: /etc/systemd/timesyncd.conf.d
            state: directory
            owner: root
            group: root
            mode: 0755

      - name: "2.1.3.1 | PATCH | Ensure systemd-timesyncd configured with authorized timeserver | sources"
        template:
            src: "{{ item }}.j2"
            dest: "/{{ item }}"
            mode: 0644
            owner: root
            group: root
        loop:
            - "etc/systemd/timesyncd.conf.d/timesyncd.conf"
        notify: restart timeservice
  when:
      - ubuntu2004cis_rule_2_1_3_1
      - ubuntu2004cis_time_synchronization == "systemd-timesyncd"
  tags:
      - level1
      - patch
      - rule_2.1.3.1
      - timesyncd

- name: "2.1.3.2 | PATCH | Ensure systemd-timesyncd is enabled and running"
  systemd:
      name: systemd-timesyncd
      state: started
      enabled: true
      masked: false
  when:
      - ubuntu2004cis_rule_2_1_3_2
      - ubuntu2004cis_time_synchronization == "systemd-timesyncd"
  tags:
      - level1
      - rule_2.1.3.2
      - timesyncd

- name: "2.1.4.1 | PATCH | Ensure ntp access control is configured "
  lineinfile:
      path: /etc/ntp.conf
      regexp: '^(restrict) (|{{ item }}) .*$'
      line: 'restrict {{ item }} default kod nomodify notrap nopeer noquery'
  loop:
      - '-4'
      - '-6'
  notify: Restart timeservice
  when:
      - ubuntu2004cis_rule_2_1_4_1
      - ubuntu2004cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.1.4.1
      - ntp

- name: "2.1.4.2 | PATCH | Ensure ntp is configured with authorized timeserver"
  block:
      - name: "2.1.4.2 | PATCH | Ensure ntp is configured with authorized timeserver | pool"
        lineinfile:
            path: /etc/ntp.conf
            regexp: '^pool.*'
            line: 'pool {{ item.name }} {{ item.options }}'
        notify: Restart timeservice
        loop: "{{ ubuntu2004cis_time_pool }}"
        loop_control:
            label: "{{ item.name }}"

      - name: "2.1.4.2 | PATCH | Ensure ntp is configured with authorized timeserver | servers"
        lineinfile:
            path: /etc/ntp.conf
            insertafter: '^server'
            line: 'server {{ item.name }} {{ item.options }}'
        loop: "{{ ubuntu2004cis_time_servers }}"
        loop_control:
            label: "{{ item.name }}"
        notify: Restart timeservice
  when:
      - ubuntu2004cis_rule_2_1_4_2
      - ubuntu2004cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.1.4.2
      - ntp

- name: "2.1.4.3 | PATCH | Ensure ntp is running as user ntp"
  lineinfile:
      path: /etc/init.d/ntp
      regexp: '^RUNASUSER.*'
      line: 'RUNASUSER=ntp'
  notify: Restart timeservice
  when:
      - ubuntu2004cis_rule_2_1_4_3
      - ubuntu2004cis_time_synchronization == "ntp"
  tags:
      - level1
      - patch
      - rule_2.1.4.3
      - ntp

- name: "2.1.4.4 | PATCH | Ensure ntp is enabled and running"
  systemd:
      name: ntp
      state: started
      enabled: true
      masked: false
  when:
      - ubuntu2004cis_rule_2_1_4_4
      - ubuntu2004cis_time_synchronization == "ntp"
  tags:
      - level1
      - rule_2.1.4.4
      - ntp

- name: "2.2.1 | PATCH | Ensure X Window System is not installed"
  apt:
      name:
          - "xorg"
          - "x11*"
          - "xserver-xorg*"
      state: absent
  when:
      - not ubuntu2004cis_xwindows_required
      - ubuntu2004cis_rule_2_2_1
  tags:
      - level1
      - xwindows
      - patch
      - rule_2.2.1

- name: "2.2.2 | PATCH | Ensure Avahi Server is not installed"
  block:
      - name: "2.2.2 | PATCH | Ensure Avahi Server is not installed| Stop/Disable avahi-daemon.service"
        service:
            name: avahi-daemon.service
            state: stopped
            enabled: false
        when: avahi_service_status.stdout == "loaded"

      - name: "2.2.2 | PATCH | Ensure Avahi Server is not installed | Stop/Disable avahi-daemon.socket"
        systemd:
            name: avahi-daemon.socket
            state: stopped
            enabled: false
        when: avahi_service_status.stdout == "loaded"

      - name: "2.2.2 | PATCH | Ensure Avahi Server is not installed | Remove avahi-daemon"
        apt:
            name: avahi-daemon
            state: absent
  when:
      - not ubuntu2004cis_xwindows_required
      - ubuntu2004cis_rule_2_2_2
      - not ubuntu2004cis_avahi_server
      - "'avahi' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.2
      - avahi
      - services

- name: "2.2.3 | PATCH | Ensure CUPS is not installed"
  apt:
      name: cups
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_3
      - not ubuntu2004cis_cups_server
      - cups_service_status.stdout == "loaded"
      - "'cups' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.3
      - cups
      - services

- name: "2.2.4 | PATCH | Ensure DHCP Server is not installed"
  apt:
      name: isc-dhcp-server
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_4
      - dhcpd_service_status.stdout == "loaded"
      - not ubuntu2004cis_dhcp_server
      - "'isc-dhcp-server' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.4
      - dhcp
      - services

- name: "2.2.5 | PATCH | Ensure LDAP server is not installed"
  apt:
      name: slapd
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_5
      - slapd_service_status.stdout == "loaded"
      - not ubuntu2004cis_ldap_server
      - "'slapd' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.5
      - ldap
      - services

- name: "2.2.6 | PATCH | Ensure NFS is not installed"
  apt:
      name: nfs-kernel-server
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_6
      - nfs_service_status.stdout == "loaded"
      - not ubuntu2004cis_nfs_rpc_server
      - "'nfs-kernel-server' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.6
      - nfs
      - rpc
      - services

- name: "2.2.7 | PATCH | Ensure DNS Server is not installed"
  apt:
      name: bind9
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_7
      - named_service_status.stdout == "loaded"
      - not ubuntu2004cis_named_server
      - "'bind9' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.7
      - dns
      - service

- name: "2.2.8 | PATCH | Ensure FTP Server is not installed"
  apt:
      name: vsftpd
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_8
      - vsftpd_service_status.stdout == "loaded"
      - not ubuntu2004cis_vsftpd_server
      - "'vsftpd' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.8
      - ftp
      - service

- name: "2.2.9 | PATCH | Ensure HTTP server is not installed"
  apt:
      name: apache2
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_9
      - httpd_service_status.stdout == "loaded"
      - not ubuntu2004cis_httpd_server
      - "'apache2' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.9
      - httpd
      - service

- name: "2.2.10 | PATCH | Ensure IMAP and POP3 server are not installed"
  apt:
      name: ['dovecot-imapd', 'dovecot-pop3d']
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_10
      - dovecot_service_status.stdout == "loaded"
      - not ubuntu2004cis_dovecot_server
      - "'dovecot-imapd' in ansible_facts.packages or
        'dovecot-pop3d' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.10
      - dovecot
      - service

- name: "2.2.11 | PATCH | Ensure Samba is not installed"
  apt:
      name: samba
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_11
      - smb_service_status.stdout == "loaded"
      - not ubuntu2004cis_smb_server
      - "'samba' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.11
      - samba
      - service

- name: "2.2.12 | PATCH | Ensure HTTP Proxy Server is not installed"
  apt:
      name: squid
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_12
      - squid_service_status.stdout == "loaded"
      - not ubuntu2004cis_squid_server
      - "'squid' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.12
      - http_proxy
      - service

- name: "2.2.13 | PATCH | Ensure SNMP Server is not installed"
  apt:
      name: snmpd
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_13
      - snmpd_service_status.stdout == "loaded"
      - not ubuntu2004cis_snmp_server
      - "'snmpd' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.13
      - snmp
      - service

- name: "2.2.14 | PATCH | Ensure NIS Server is not installed"
  apt:
      name: nis
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_14
      - ypserv_service_status.stdout == "loaded"
      - not ubuntu2004cis_nis_server
      - "'nis' in ansible_facts.packages"
  tags:
      - level1
      - rule_2.2.14
      - nis
      - service

- name: "2.2.15 | PATCH | Ensure dnsmasq service is not installed"
  apt:
      name: dnsmasq
      state: absent
  when:
      - ubuntu2004cis_rule_2_2_15
      - not ubuntu2004cis_dnsmasq_server
      - "'dnsmasq' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.15
      - dnsmasq

- name: "2.2.16 | PATCH | Ensure mail transfer agent is configured for local-only mode"
  block:
      - name: "2.2.16 | PATCH | Ensure mail transfer agent is configured for local-only mode | Make changes if exim4 installed"
        lineinfile:
            path: /etc/exim4/update-exim4.conf.conf
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        with_items:
            - { regexp: '^dc_eximconfig_configtype', line: "dc_eximconfig_configtype='local'" }
            - { regexp: '^dc_local_interfaces', line: "dc_local_interfaces='127.0.0.1 ; ::1'" }
            - { regexp: '^dc_readhost', line: "dc_readhost=''" }
            - { regexp: '^dc_relay_domains', line: "dc_relay_domains=''" }
            - { regexp: '^dc_minimaldns', line: "dc_minimaldns='false'" }
            - { regexp: '^dc_relay_nets', line: "dc_relay_nets=''" }
            - { regexp: '^dc_smarthost', line: "dc_smarthost=''" }
            - { regexp: '^dc_use_split_config', line: "dc_use_split_config='false'" }
            - { regexp: '^dc_hide_mailname', line: "dc_hide_mailname=''" }
            - { regexp: '^dc_mailname_in_oh', line: "dc_mailname_in_oh='true'" }
            - { regexp: '^dc_localdelivery', line: "dc_localdelivery='mail_spool'" }
        notify: restart exim4
        when: "'exim4' in ansible_facts.packages"

      - name: "2.2.16 | PATCH | Ensure mail transfer agent is configured for local-only mode | Make changes if postfix is installed"
        lineinfile:
            path: /etc/postfix/main.cf
            regexp: '^(#)?inet_interfaces'
            line: 'inet_interfaces = loopback-only'
        notify: restart postfix
        when: "'postfix' in ansible_facts.packages"

      - name: "2.2.16 | PATCH | Ensure mail transfer agent is configured for local-only mode | Message out other main agents"
        debug:
            msg:
                - "Warning!! You are not using either exim4 or postfix"
                - "Please review your vendors documentation to configure local-only mode"
        when:
            - "'exim4' not in ansible_facts.packages"
            - "'postfix' not in ansible_facts.packages"
  when:
      - ubuntu2004cis_rule_2_2_16
      - not ubuntu2004cis_is_mail_server
  tags:
      - level1
      - patch
      - rule_2.2.16
      - postfix

- name: "2.2.17 | PATCH | Ensure rsync service is either not installed or masked"
  block:
      - name: "2.2.17 | PATCH | Ensure rsync service is either not installed or masked | remove pkg"
        apt:
            name: rsync
            state: absent
        when:
            - ubuntu2004cis_rule_2_2_17
            - ubuntu2004cis_rsync_server == 'remove'

      - name: "2.2.17 | PATCH | Ensure rsync service is either not installed or masked | mask service"
        service:
            name: rsync.service
            state: stopped
            enabled: false
            masked: true
        when:
            - ubuntu2004cis_rule_2_2_17
            - ubuntu2004cis_rsync_server == 'mask'
  when:
       - not ubuntu2004cis_nis_server
       - rsyncd_service_status.stdout == "loaded"
       - ubuntu2004cis_rule_2_2_17
       - "'rsync' in ansible_facts.packages"
  tags:
      - level1
      - patch
      - rule_2.2.17
      - rsync

- name: "2.3.1 | PATCH | Ensure NIS Client is not installed"
  apt:
      name: nis
      state: absent
  when:
      - ubuntu2004cis_rule_2_3_1
      - not ubuntu2004cis_ypbind_required
  tags:
      - level1
      - rule_2.3.1
      - nis

- name: "2.3.2 | PATCH | Ensure rsh client is not installed"
  apt:
      name: rsh-client
      state: absent
  when:
      - ubuntu2004cis_rule_2_3_2
      - not ubuntu2004cis_rsh_required
  tags:
      - level1
      - patch
      - rule_2.3.2
      - rsh

- name: "2.3.3 | PATCH | Ensure talk client is not installed"
  apt:
      name: talk
      state: absent
  when:
      - ubuntu2004cis_rule_2_3_3
      - not ubuntu2004cis_talk_required
  tags:
      - level1
      - patch
      - rule_2.3.3
      - talk

- name: "2.3.4 | PATCH | Ensure telnet client is not installed"
  apt:
      name: telnet
      state: absent
  when:
      - ubuntu2004cis_rule_2_3_4
      - not ubuntu2004cis_telnet_required
  tags:
      - level1
      - patch
      - rule_2.3.4
      - telnet

- name: "2.3.5 | PATCH | Ensure LDAP client is not installed"
  apt:
      name: ldap-utils
      state: absent
  when:
      - ubuntu2004cis_rule_2_3_5
      - not ubuntu2004cis_openldap_clients_required
  tags:
      - level1
      - patch
      - rule_2.3.5
      - ldap

- name: "2.3.6 | PATCH | Ensure RPC is not installed"
  apt:
      name: rpcbind
      state: absent
  when:
      - ubuntu2004cis_rule_2_3_6
      - not ubuntu2004cis_rpc_required
  tags:
      - level1
      - patch
      - rule_2.3.6
      - rpc

- name: "2.4 | AUDIT | Ensure nonessential services are removed or masked"
  changed_when: false
  debug:
      msg: >
          Run the following command:
          # lsof -i -P -n | grep -v "(ESTABLISHED)"
          Review the output to ensure that all services listed are required on the system. If a listed
          service is not required, remove the package containing the service. If the package
          containing a non-essential service is required, stop and mask the non-essential service.
          Run the following command to remove the package containing the service:
          # apt purge <package_name>
          Run the following command to stop and mask the service:
          # systemctl --now mask <service_name>
  when:
      - not ubuntu2004cis_rpc_required
      - ubuntu2004cis_rule_2_4
  tags:
      - level1
      - patch
      - rule_2.4
