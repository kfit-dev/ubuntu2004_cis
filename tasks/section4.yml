- name: "4.1.1 | PATCH | Ensure cron daemon is enabled and active"
  service:
      name: "{{ cron_service[ansible_os_family] }}"
      enabled: yes
      state: started
  when:
      - ubuntu2004cis_rule_4_1_1
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.1

- name: "4.1.2 | PATCH | Ensure permissions on /etc/crontab are configured"
  file:
      dest: /etc/crontab
      owner: root
      group: root
      mode: 0600
  when:
      - ubuntu2004cis_rule_4_1_2
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.2

- name: "4.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured"
  file:
      dest: /etc/cron.hourly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - ubuntu2004cis_rule_4_1_3
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.3

- name: "4.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured"
  file:
      dest: /etc/cron.daily
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - ubuntu2004cis_rule_4_1_4
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.4

- name: "4.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured"
  file:
      dest: /etc/cron.weekly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - ubuntu2004cis_rule_4_1_5
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.5

- name: "4.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured"
  file:
      dest: /etc/cron.monthly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - ubuntu2004cis_rule_4_1_6
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.6

- name: "4.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured"
  file:
      dest: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - ubuntu2004cis_rule_4_1_7
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.7

- name: "4.1.8 | PATCH | Ensure cron is restricted to authorized users"
  block:
      - name: "4.1.8 | PATCH | Ensure cron is restricted to authorized users"
        file:
            dest: /etc/cron.deny
            state: absent

      - name: "4.1.8 | PATCH | Ensure cron is restricted to authorized users"
        template:
            src: cron.allow.j2
            dest: /etc/cron.allow
            owner: root
            group: root
            mode: 0600
  when:
      - ubuntu2004cis_rule_4_1_8
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.8

- name: "4.1.9 | PATCH | Ensure at is restricted to authorized users"
  block:
      - name: "4.1.9 | PATCH | Ensure at is restricted to authorized users"
        file:
            dest: /etc/at.deny
            state: absent

      - name: "4.1.8 | PATCH | Ensure at is restricted to authorized users"
        template:
            src: at.allow.j2
            dest: /etc/at.allow
            owner: root
            group: root
            mode: 0600
  when:
      - ubuntu2004cis_rule_4_1_9
  tags:
      - level1
      - patch
      - cron
      - rule_4.1.9

- name: "4.2.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  file:
      dest: /etc/ssh/sshd_config
      state: file
      owner: root
      group: root
      mode: 0600
  when:
      - ubuntu2004cis_rule_4_2_1
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.1

- name: "4.2.2 | PATCH | Ensure permissions on SSH private host key files are configured"
  block:
      - name: "4.2.2 | PATCH | Ensure permissions on SSH private host key files are configured | find keys"
        find:
            paths: /etc/ssh
            patterns: "ssh_host_*_key"
        register: ssh_private_host_keys

      - name: "4.2.2 | PATCH | Ensure permissions on SSH private host key files are configured | change permissions"
        file:
            dest: "{{ item.path }}"
            state: file
            owner: root
            group: root
            mode: 0600
        with_items: "{{ ssh_private_host_keys.files }}"
  when:
      - ubuntu2004cis_rule_4_2_2
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.2

- name: "4.2.3 | PATCH | Ensure permissions on SSH public host key files are configured"
  block:
      - name: "4.2.3 | PATCH | Ensure permissions on SSH public host key files are configured | find keys"
        find:
            paths: /etc/ssh
            patterns: "ssh_host_*_key.pub"
        register: ssh_public_host_keys

      - name: "4.2.3 | PATCH | Ensure permissions on SSH public host key files are configured | change permissions"
        file:
            dest: "{{ item.path }}"
            state: file
            owner: root
            group: root
            mode: 0644
        with_items: "{{ ssh_public_host_keys.files }}"
  when:
      - ubuntu2004cis_rule_4_2_3
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.3

- name: "4.2.4 | PATCH | Ensure SSH access is limited"
  block:
      - name: "4.2.4 | PATCH | Ensure SSH access is limited | allowusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^AllowUsers'
            line: "AllowUsers {{ ubuntu2004cis_sshd['allowusers'] }}"
        when:
            - "ubuntu2004cis_sshd['allowusers']|default('')"

      - name: "4.2.4 | PATCH | Ensure SSH access is limited | allowgroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^AllowGroups'
            line: "AllowGroups {{ ubuntu2004cis_sshd['allowgroups'] }}"
        when:
            - "ubuntu2004cis_sshd['allowgroups']|default('')"

      - name: "4.2.4 | PATCH | Ensure SSH access is limited | denyusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^DenyUsers'
            line: "DenyUsers {{ ubuntu2004cis_sshd['denyusers'] }}"
        when:
            - "ubuntu2004cis_sshd['denyusers']|default('')"

      - name: "4.2.4 | PATCH | Ensure SSH access is limited | denygroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^DenyGroups'
            line: "DenyGroups {{ ubuntu2004cis_sshd['denygroups'] }}"
        when:
            - "ubuntu2004cis_sshd['denygroups']|default('')"
  when:
      - ubuntu2004cis_rule_4_2_4
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.4

- name: "4.2.5 | PATCH | Ensure SSH LogLevel is set to INFO"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LogLevel|^#LogLevel'
      line: 'LogLevel INFO'
      insertafter: '^# Logging'
  when:
      - ubuntu2004cis_rule_4_2_5
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.5

- name: "4.2.6 | PATCH | Ensure SSH PAM is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^UsePAM|^#UsePAM'
      line: 'UsePAM yes'
      insertafter: '^# and ChallengeResponseAuthentication'
  when:
      - ubuntu2004cis_rule_4_2_6
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.6

- name: "4.2.7 | PATCH | Ensure SSH root login is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin|^#PermitRootLogin'
      line: 'PermitRootLogin no'
  when:
      - ubuntu2004cis_rule_4_2_7
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.7

- name: "4.2.8 | PATCH | Ensure SSH HostbasedAuthentication is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^HostbasedAuthentication|^#HostbasedAuthentication'
      line: 'HostbasedAuthentication no'
  when:
      - ubuntu2004cis_rule_4_2_8
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.8

- name: "4.2.9 | PATCH | Ensure SSH PermitEmptyPasswords is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitEmptyPasswords|^#PermitEmptyPasswords'
      line: 'PermitEmptyPasswords no'
      insertafter: '# To disable tunneled clear text passwords'
  when:
      - ubuntu2004cis_rule_4_2_9
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.9

- name: "4.2.10 | PATCH | Ensure SSH PermitUserEnvironment is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^PermitUserEnvironment|^#PermitUserEnvironment'
      line: 'PermitUserEnvironment no'
  when:
      - ubuntu2004cis_rule_4_2_10
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.10

- name: "4.2.11 | PATCH | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^IgnoreRhosts|^#IgnoreRhosts'
      line: 'IgnoreRhosts yes'
  when:
      - ubuntu2004cis_rule_4_2_11
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.11

- name: "4.2.12 | PATCH | Ensure SSH X11 forwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^X11Forwarding|^#X11Forwarding'
      line: 'X11Forwarding no'
  when:
      - ubuntu2004cis_rule_4_2_12
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.12

- name: "4.2.13 | PATCH | Ensure only strong Ciphers are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Ciphers|^#Ciphers'
      line: "Ciphers {{ ubuntu2004cis_sshd['ciphers'] }}"
      insertafter: '^# Ciphers and keying'

  when:
      - ubuntu2004cis_rule_4_2_13
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.13

- name: "4.2.14 | PATCH | Ensure only strong MAC algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MACs|^#MACs'
      line: "MACs {{ ubuntu2004cis_sshd['macs'] }}"
      insertafter: '^# Ciphers and keying'
  when:
      - ubuntu2004cis_rule_4_2_14
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.14

- name: "4.2.15 | PATCH | Ensure only strong Key Exchange algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^KexAlgorithms|^#KexAlgorithms'
      line: "KexAlgorithms {{ ubuntu2004cis_sshd['kexalgorithms'] }}"
      insertafter: '^# Ciphers and keying'
  when:
      - ubuntu2004cis_rule_4_2_15
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.15

- name: "4.2.16 | PATCH | Ensure SSH AllowTcpForwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^AllowTcpForwarding|^#AllowTcpForwarding'
      line: 'AllowTcpForwarding no'
  when:
      - ubuntu2004cis_rule_4_2_16
  tags:
      - level2
      - patch
      - sshd
      - rule_4.2.16

- name: "4.2.17 | PATCH | Ensure SSH warning banner is configured"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Banner|^#Banner'
      line: 'Banner /etc/issue.net'
      insertafter: '^# no default banner path'
  when:
      - ubuntu2004cis_rule_4_2_17
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.17

- name: "4.2.18 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MaxAuthTries|^#MaxAuthTries'
      line: 'MaxAuthTries 4'
      insertafter: '^# Authentication'
  when:
      - ubuntu2004cis_rule_4_2_18
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.18

- name: "4.2.19 | PATCH | Ensure SSH MaxStartups is configured"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MaxStartups|^#MaxStartups'
      line: 'MaxStartups 10:30:60'
  when:
      - ubuntu2004cis_rule_4_2_19
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.19

- name: "4.2.20 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^LoginGraceTime|^#LoginGraceTime'
      line: "LoginGraceTime 60"
      insertafter: '^# Authentication'
  when:
      - ubuntu2004cis_rule_4_2_20
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.20

- name: "4.2.21 | PATCH | Ensure SSH MaxSessions is set to 4 or less "
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MaxSessions|^#MaxSessions'
      line: 'MaxSessions 4'
      insertafter: '^# Authentication'
  notify:
      - restart sshd
  when:
      - ubuntu2004cis_rule_5_2_22
  tags:
      - level1
      - patch
      - sshd
      - rule_5.2.22

- name: "4.2.22 | PATCH | Ensure SSH Idle Timeout Interval is configured"
  block:
      - name: "4.2.22 | PATCH | Ensure SSH Idle Timeout Interval is configured"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveInterval'
            line: "ClientAliveInterval {{ ubuntu2004cis_sshd['clientaliveinterval'] }}"

      - name: "4.2.22 | PATCH | Ensure SSH ClientAliveCountMax set to <= 3"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: '^ClientAliveCountMax'
            line: "ClientAliveCountMax {{ ubuntu2004cis_sshd['clientalivecountmax'] }}"
  when:
      - ubuntu2004cis_rule_4_2_22
  tags:
      - level1
      - patch
      - sshd
      - rule_4.2.22

- name: "4.3.1 | PATCH | Ensure sudo is installed"
  apt:
      name: sudo
      state: present
      install_recommends: false
  when:
      - ubuntu2004cis_rule_4_3_1
  tags:
      - level1
      - sudo
      - patch
      - rule_4.3.1

- name: "4.3.2 | PATCH | Ensure sudo commands use pty"
  lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^\s*Defaults\s+use_pty\s*$'
      line: 'Defaults use_pty'
      insertafter: '^\s*Defaults'
      validate: 'visudo -cf %s'
  when:
      - ubuntu2004cis_rule_4_3_2
  tags:
      - level1
      - sudo
      - patch
      - rule_4.3.2

- name: "4.3.3 | PATCH | Ensure sudo log file exists"
  lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^\s*Defaults\s+logfile\s*='
      line: 'Defaults logfile="/var/log/sudo.log"'
      insertafter: '^\s*Defaults'
      validate: 'visudo -cf %s'
  when:
      - ubuntu2004cis_rule_4_3_3
  tags:
      - level1
      - sudo
      - patch
      - rule_4.3.3

- name: "4.3.4 | PATCH | Ensure users must provide password for escalation"
  command: /bin/true
  changed_when: false
  when:
      - ubuntu2004cis_rule_4_3_4
  tags:
      - level2
      - patch
      - rule_4.3.4
      - notimplemented

- name: "4.3.5 | PATCH | Ensure re-authentication for privilege escalation is not disabled globally"
  replace:
      path: "{{ item }}"
      regexp: '^([^#].*)!authenticate(.*)'
      replace: '\1authenticate\2'
      validate: '/usr/sbin/visudo -cf %s'
  loop: "{{ ubuntu2004cis_sudoers_files.stdout_lines }}"
  when:
      - ubuntu2004cis_rule_4_3_5
  tags:
      - level1
      - patch
      - sudo
      - rule_4.3.5

- name: "4.3.6 | PATCH | Ensure sudo authentication timeout is configured correctly"
  block:
      - name: "4.3.6 | AUDIT | Ensure sudo authentication timeout is configured correctly | Get files with timeout set"
        shell: grep -is 'timestamp_timeout' /etc/sudoers /etc/sudoers.d/* | cut -d":" -f1 | uniq | sort
        changed_when: false
        failed_when: false
        register: ubuntu2004cis_4_3_6_timeout_files

      - name: "4.3.6 | PATCH | Ensure sudo authentication timeout is configured correctly | Set value if no results"
        lineinfile:
            path: /etc/sudoers
            regexp: '^\s*Defaults\s+timestamp_timeout\s*='
            line: "Defaults timestamp_timeout={{ ubuntu2004cis_sudo_timestamp_timeout }}"
            validate: '/usr/sbin/visudo -cf %s'
            insertafter: '^\s*Defaults'
        when: ubuntu2004cis_4_3_6_timeout_files.stdout | length == 0

      - name: "4.3.6 | PATCH | Ensure sudo authentication timeout is configured correctly | Set value if has results"
        replace:
            path: "{{ item }}"
            regexp: 'timestamp_timeout\s*=\s*(\d+)'
            replace: "timestamp_timeout={{ ubuntu2004cis_sudo_timestamp_timeout }}"
            validate: '/usr/sbin/visudo -cf %s'
        loop: "{{ ubuntu2004cis_4_3_6_timeout_files.stdout_lines }}"
        when: ubuntu2004cis_4_3_6_timeout_files.stdout | length > 0
  when:
      - ubuntu2004cis_rule_4_3_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - sudo
      - rule_4.3.6

- name: "4.3.7 | PATCH | Ensure access to the su command is restricted"
  block:

      - name: "4.3.7 | PATCH | Ensure access to the su command is restricted | Ensure sugroup exists"
        group:
            name: sugroup
            state: present
        register: ubuntu2004cis_4_3_7_sugroup

      - name: "4.3.7 | PATCH | Ensure access to the su command is restricted | remove users from group"
        lineinfile:
            path: /etc/group
            regexp: '^{{ ubuntu2004cis_sugroup }}(:.:.*:).*$'
            line: '{{ ubuntu2004cis_sugroup }}\g<1>'
            backrefs: true

      - name: "4.3.7 | PATCH | Ensure access to the su command is restricted | Setting pam_wheel to use_uid"
        lineinfile:
            path: /etc/pam.d/su
            regexp: '^(#)?auth\s+required\s+pam_wheel\.so'
            line: 'auth           required        pam_wheel.so use_uid group={{ ubuntu2004cis_sugroup }}'
  when:
      - ubuntu2004cis_rule_4_3_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - sudo
      - rule_4.3.7

- name: "4.4.1 | PATCH | Ensure password creation requirements are configured"
  block:
      - name: "4.4.1 | PATCH | Ensure password creation requirements are configured | Install pam_pwquality module"
        package:
            name: libpam-pwquality
            state: present

      - name: "4.4.1 | PATCH | Ensure password creation requirements are configured | Add minlen"
        lineinfile:
            path: /etc/security/pwquality.conf
            regexp: '^minlen|^# minlen'
            line: minlen = 14

      - name: "4.4.1 | PATCH | Ensure password creation requirements are configured | Add minclass"
        lineinfile:
            path: /etc/security/pwquality.conf
            regexp: '^minclass|^# minclass'
            line: 'minclass = 4'

      - name: "4.4.1 | AUDIT | Ensure password creation requirements are configured | Confirm pwquality module in common-password"
        shell: grep 'password.*requisite.*pam_pwquality.so' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubuntu2004cis_4_4_1_pam_pwquality_state

      - name: "4.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality exists"
        community.general.pamd:
            name: common-password
            type: password
            control: requisite
            module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: args_present
        when: ubuntu2004cis_4_4_1_pam_pwquality_state.stdout | length > 0

      - name: "4.4.1 | PATCH | Ensure password creation requirements are configured | Set retry to 3 if pwquality does not exist"
        community.general.pamd:
            name: common-password
            type: password
            control: required
            module_path: pam_permit.so
            new_type: password
            new_control: requisite
            new_module_path: pam_pwquality.so
            module_arguments: 'retry=3'
            state: after
        when: ubuntu2004cis_4_4_1_pam_pwquality_state.stdout | length == 0
  when:
      - ubuntu2004cis_rule_4_4_1
  tags:
      - level1
      - patch
      - rule_4.4.1
      - pam

- name: "4.4.2 | PATCH | Ensure lockout for failed password attempts is configured"
  block:
      - name: "4.4.2 | PATCH |  Ensure lockout for failed password attempts is configured - /etc/pam.d/common-account"
        lineinfile:
            dest: /etc/pam.d/common-account
            line: "{{ item.line }}"
            insertafter: '{{ item.after }}'
        with_items:
            - { regexp: '^account\s+requisite\s+pam_deny.so', line: 'account    requisite pam_deny.so', after: '^# here.s the fallback if no module succeeds' }
            - { regexp: '^account\s+required\s+pam_tally2.so', line: 'account    required pam_tally2.so', after: '^account    requisite pam_deny.so' }

      - name: "4.4.2 | PATCH |  Ensure lockout for failed password attempts is configured - /etc/pam.d/common-auth"
        lineinfile:
            dest: /etc/pam.d/common-auth
            line: 'auth       required pam_tally2.so onerr=fail audit silent deny=5 unlock_time=900'
  when:
      - ubuntu2004cis_rule_4_4_2
  tags:
      - level1
      - patch
      - rule_4.4.2

- name: "4.4.3 | PATCH | Ensure password reuse is limited"
  lineinfile:
      dest: /etc/pam.d/common-password
      line: "password        required                        pam_pwhistory.so remember={{ ubuntu2004cis_pass['history'] }}"
      insertafter: '^# end of pam-auth-update config'
  when:
      - ubuntu2004cis_rule_4_4_3
  tags:
      - level1
      - patch
      - rule_4.4.3

- name: "4.4.4 | PATCH | Ensure strong password hashing algorithm is configured"
  block:
      - name: "4.4.4 | AUDIT | Ensure strong password hashing algorithm is configured | Confirm pam_unix.so"
        shell: grep -E '^\s*password\s+(\S+\s+)+pam_unix\.so\s+(\S+\s+)*(sha512|yescrypt)\s*(\S+\s*)*(\s+#.*)?$' /etc/pam.d/common-password
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubuntu2004cis_4_4_4_pam_unix_state

      - name: "4.4.4 | PATCH | Ensure strong password hashing algorithm is configured | Set hashing if pam_unix.so exists"
        community.general.pamd:
            name: common-password
            type: password
            control: '[success=1 default=ignore]'
            module_path: pam_unix.so
            module_arguments: sha512
            state: args_present
        when: ubuntu2004cis_4_4_4_pam_unix_state.stdout | length > 0

      - name: "4.4.4 | PATCH | Ensure strong password hashing algorithm is configured | Set hashing if pam_unix.so does not exist"
        lineinfile:
            path: /etc/pam.d/common-password
            line: 'password        [success=1 default=ignore]      pam_unix.so sha512'
            insertafter: '^# end of pam-auth-update config'
        when: ubuntu2004cis_4_4_4_pam_unix_state.stdout | length == 0
  when:
      - ubuntu2004cis_rule_4_4_4
  tags:
      - level1
      - patch
      - rule_4.4.4
      - pamd

- name: "4.4.5 | PATCH | Ensure password hashing algorithm is up to date with the latest standards"
  block:
      - name: "4.4.5 | AUDIT | Ensure all current passwords uses the configured hashing algorithm | capture hash"
        shell: cat /etc/shadow | awk -F':' '{print $1" "$2}' | grep -Ev '(!|\*)'
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubuntu2004cis_4_4_5_passwd_hash_used
  when:
      - ubuntu2004cis_rule_4_4_5
  tags:
      - level1
      - patch
      - rule_4.4.5
      - pam

- name: "4.5.1.1 | PATCH | Ensure minimum days between password changes is configured"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MIN_DAYS|^#PASS_MIN_DAYS'
      line: "PASS_MIN_DAYS {{ ubuntu2004cis_pass['min_days'] }}"
  when:
      - ubuntu2004cis_rule_4_5_1_1
  tags:
      - level1
      - patch
      - rule_4.5.1.1

- name: "4.5.1.2 | PATCH | Ensure password expiration is 365 days or less"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MAX_DAYS|^#PASS_MAX_DAYS'
      line: "PASS_MAX_DAYS {{ ubuntu2004cis_pass['max_days'] }}"
      insertafter: '# Password aging controls'
  when:
      - ubuntu2004cis_rule_4_5_1_2
  tags:
      - level1
      - patch
      - rule_4.5.1.2

- name: "SCORED | 4.1.1.1 | PATCH | Ensure auditd is installed"
  apt:
      name: audispd-plugins
      state: present
      install_recommends: false
  when:
      - not ubuntu2004cis_skip_for_travis
      - ubuntu2004cis_rule_4_1_1_1
  tags:
      - level2
      - patch
      - auditd
      - rule_4.1.1.1

- name: "4.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_WARN_AGE|^#PASS_WARN_AGE'
      line: "PASS_WARN_AGE {{ ubuntu2004cis_pass['warn_age'] }}"
  when:
      - ubuntu2004cis_rule_4_5_1_3
  tags:
      - level1
      - patch
      - rule_4.5.1.3

- name: "4.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less"
  lineinfile:
      state: present
      dest: /etc/default/useradd
      regexp: '^INACTIVE'
      line: "INACTIVE={{ ubuntu2004cis_pass['inactive'] }}"
  when:
      - ubuntu2004cis_rule_4_5_1_4
  tags:
      - level1
      - patch
      - rule_4.5.1.4

- name: "4.5.1.5 | PATCH | Ensure all users last password change date is in the past"
  block:
      - name: "4.5.1.5 | PATCH | Ensure all users last password change date is in the past | lock users"
        user:
            name: "{{ item }}"
            password_lock: yes"
        loop: "{{ users_password_change_date_in_future.stdout_lines }}"
        when:
            - ubuntu2004cis_password_change_date_in_future_action == 'lock'

      - name: "4.5.1.5 | PATCH | Ensure all users last password change date is in the past | expire users"
        user:
            name: "{{ item }}"
            expires: 1422403387
        loop: "{{ users_password_change_date_in_future.stdout_lines }}"
        when:
            - ubuntu2004cis_password_change_date_in_future_action == 'expire'
  when:
      - ubuntu2004cis_rule_4_5_1_5
      - users_password_change_date_in_future.stdout_lines | length > 0
  tags:
      - level1
      - patch
      - rule_4.5.1.5

- name: "4.5.1.6 | PATCH | Ensure the number of changed characters in a new password is configured"
  lineinfile:
      path: /etc/security/pwquality.conf
      regexp: '^(#\s+|)difok'
      line: 'difok = {{ ubuntu2004cis_pass.character_changed }}'
      create: true
      mode: 0640
  when:
      - ubuntu2004cis_rule_4_5_1_6
  tags:
      - level1
      - patch
      - rule_4.5.1.6
      - user
      - login

- name: "4.5.1.7 | PATCH | Ensure the number of changed characters in a new password is configured"
  lineinfile:
      path: /etc/security/pwquality.conf
      regexp: '^(#\s+|)dictcheck'
      line: 'dictcheck = 1'
      create: true
      mode: 0640
  when:
      - ubuntu2004cis_rule_4_5_1_7
  tags:
      - level1
      - patch
      - rule_4.5.1.7
      - user
      - login

- name: "4.5.2 | PATCH | Ensure system accounts are secured"
  command: >
    for user in `awk -F: '($3 < 1000) {print $1 }' /etc/passwd`; do
     if [ $user != "root" ]; then
      usermod -L $user
      if [ $user != "sync" ] && [ $user != "shutdown" ] && [ $user != "halt" ];
      then
        usermod -s /usr/sbin/nologin $user
      fi
     fi
    done
  changed_when: false
  when:
      - ubuntu2004cis_rule_4_5_2
      - system_accounts_non_login_1.stdout
      - system_accounts_non_login_2.stdout
  tags:
      - level1
      - patch
      - rule_4.5.2
      - scored

- name: "4.5.3 | PATCH | Ensure default group for the root account is GID 0"
  command: usermod -g 0 root
  changed_when: false
  failed_when: false
  when:
      - ubuntu2004cis_rule_4_5_3
  tags:
      - level1
      - patch
      - rule_4.5.3
      - scored

- name: "4.5.4 | PATCH | Ensure default user umask is 027 or more restrictive"
  block:
      - name: "4.5.4 | AUDIT | Ensure default user umask is 027 or more restrictive"
        shell: grep -E '^session\s+optional\s+pam_umask.so' /etc/pam.d/common-session
        changed_when: false
        failed_when: false
        check_mode: false
        register: ubuntu2004cis_4_5_4_umask_pam_status

      - name: "4.5.4 | PATCH | Ensure default user umask is 027 or more restrictive"
        lineinfile:
            path: /etc/pam.d/common-session
            line: 'session optional                        pam_umask.so'
            insertbefore: '^# end of pam-auth-update config'
        when: ubuntu2004cis_4_5_4_umask_pam_status.stdout | length == 0

      - name: "4.5.4 | PATCH | Ensure default user umask is 027 or more restrictive"
        lineinfile:
            path: "{{ item.path }}"
            regexp: '(?i)(umask\s*\d\d\d)'
            line: '{{ item.line }} {{ ubuntu2004cis_bash_umask }}'
        with_items:
            - { path: '/etc/bash.bashrc', line: 'umask' }
            - { path: '/etc/profile', line: 'umask' }
            - { path: '/etc/login.defs', line: 'UMASK' }

      - name: "4.5.4 | PATCH | Ensure default user umask is 027 or more restrictive"
        lineinfile:
            path: /etc/login.defs
            regexp: '^USERGROUPS_ENAB'
            line: USERGROUPS_ENAB no
  when:
      - ubuntu2004cis_rule_4_5_4
  tags:
      - level1
      - patch
      - rule_4.5.4
      - user

- name: "4.5.5 | PATCH | Ensure default user shell timeout is configured"
  blockinfile:
      create: true
      mode: 0644
      dest: "{{ item.dest }}"
      state: "{{ item.state }}"
      marker: "# {mark} ANSIBLE MANAGED"
      block: |
        # Set session timeout - CIS ID 4.5.5
        # only set TMOUT if it isn't set yet to avoid a shell error
        : ${TMOUT={{ ubuntu2004cis_shell_timeout }}}
        readonly TMOUT
        export TMOUT
  with_items:
      - { dest: /etc/profile.d/tmout.sh, state: present }
      - { dest: /etc/profile, state: "(/etc/profile.d/tmout.sh == '/etc/profile') | ternary('present', 'absent')" }
      - { dest: /etc/bash.bashrc, state: present }
  when:
      - ubuntu2004cis_rule_4_5_5
  tags:
      - level1
      - patch
      - rule_4.5.5
      - user

- name: "4.5.6 | PATCH | Ensure nologin is not listed in /etc/shells"
  lineinfile:
      path: /etc/shells
      regex: nologin\b
      state: absent
  when:
      - ubuntu2004cis_rule_4_5_6
  tags:
      - level1
      - patch
      - rule_4.5.6
      - user

- name: "4.5.7 | PATCH | Ensure maximum number of same consecutive characters in a password is configured"
  lineinfile:
      path: /etc/security/pwquality.conf
      regexp: '^(#\s+|)maxrepeat'
      line: 'maxrepeat = {{ ubuntu2004cis_pass.max_repeat_letters }}'
  when:
      - ubuntu2004cis_rule_4_5_7
  tags:
      - level1
      - patch
      - rule_4.5.7
      - user
      - login
